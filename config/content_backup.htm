<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站: <a href="https://mdecd2025.github.io/hw-41223227/content/index.html">https://mdecd2025.github.io/hw-41223227/content/index.html</a></p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-41223227">https://github.com/mdecd2025/hw-41223227</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<p></p>
<h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p>
<p>四連桿機構檔案:<a href="/downloads/fourbarbox.zip">/downloads/fourbarbox.zip</a></p>
<p><a href="https://youtu.be/jPMiPfJcMXI">https://youtu.be/jPMiPfJcMXI</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/jPMiPfJcMXI" width="560"></iframe></p>
<p></p>
<h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p>
<p>檔案:<a href="/downloads/fourbar_box - HW2.zip">/downloads/fourbar_box - HW2.zip</a></p>
<p>影片網址:<a href="https://youtu.be/xc1CJ9erD_A">https://youtu.be/xc1CJ9erD_A</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/xc1CJ9erD_A" width="560"></iframe></p>
<p></p>
<h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號</p>
<p>投籃機webot連接及程式控制影片:</p>
<p><a href="https://youtu.be/50-mYV15Ne0">https://youtu.be/50-mYV15Ne0</a></p>
<p>投籃機檔案:<a href="/downloads/HW3投籃機.zip">/downloads/HW3投籃機.zip</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/50-mYV15Ne0" width="560"></iframe></p>
<p>這個影片只包含了投籃機的連接，還沒有籃框，後續影片會再補上。</p>
<p>導入籃框影片:<a href="https://youtu.be/Q2u9kAxgtYY">https://youtu.be/Q2u9kAxgtYY</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Q2u9kAxgtYY" width="560"></iframe></p>
<p>流程:將繪製好的發射器利用程式將stl檔轉成obj檔，進入webot建立背景及robort，並在robot的children裡面新增hingejoint跟solid，接著在solid的children中新增cadshape並導入零件1，後續再幫零件1加上mesh，即能完成一個零件的導入，後面的零件也依序前述的步驟就能完成，之後將各零件的數值及位置更改，即能完成發射器的導入，後面再加入球、地板及籃框，最後再將程式導入就能完成HW3的作業。<br/>心得:此次的HW3我認為難度是相當困難，雖然現在我對Webot已經開始漸漸地理解要怎麼運用，但在做此次作業時依然遇到一個問題，例如:我發射器的零件雖然都導入到Webot裡面了，但有好幾個零件位置都跑掉且在移動它們時會連其他零件也一起動的問題，而相對地，其他部分就沒什麼問題。至於發射器模擬的部分，後續會再將影片補上。</p>
<h1>Tasks</h1>
<h2>Task1</h2>
<h4>自行製作可攜程式系統</h4>
<p><a href="https://youtu.be/X3rwgdx3Xkw">https://youtu.be/X3rwgdx3Xkw</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/X3rwgdx3Xkw" width="560"></iframe></p>
<h3>list</h3>
<p><a href="https://youtu.be/h-1EQHuQwbI">https://youtu.be/h-1EQHuQwbI</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/h-1EQHuQwbI" width="560"></iframe></p>
<p>顯示全部學員的倉儲及網站:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html, document, ajax

# 取得 brython_div1 DOM 元素
brython_div1 = document["brython_div1"]

# 設定學員資料的 URL
url = "https://mde.tw/list/2b.txt"

# 定義 AJAX 請求的回呼函式
def on_complete(req):
    if req.status == 200:
        data = req.text.splitlines()  # 以換行符號分割成數列
        if len(data) &gt; 1:  # 確保有資料
            all_stud = data[1:]  # 跳過標題列
            
            brython_div1 &lt;= f"總共有 {len(all_stud)} 名學員"
            brython_div1 &lt;= html.BR()
            
            # 依序處理每一筆學員資料
            for stud in all_stud:
                fields = stud.split()  # 假設資料是用空格分隔 (請確認你的資料格式)
                if len(fields) &gt;= 2:  # 確保至少有 學號 和 帳號
                    stud_id = fields[0]   # 學號
                    account = fields[1]   # 帳號
                    github_link = f"https://github.com/mdecd2025/hw-{stud_id}"
                    
                    # 顯示學號與帳號（兩者都附上超連結）
                    brython_div1 &lt;= html.A(stud_id, href=github_link, target="_blank")  # 學號超連結
                    brython_div1 &lt;= " "
                    brython_div1 &lt;= html.A(account, href=github_link, target="_blank")  # 帳號超連結
                    brython_div1 &lt;= html.BR()
        else:
            brython_div1 &lt;= "沒有學員資料可顯示"
    else:
        brython_div1 &lt;= "無法取得學員資料"

# 發送 AJAX 請求
ajax.get(url, oncomplete=on_complete)
</pre>
<p><a href="https://mdecd2025.github.io/hw-41223227/content/Brython.html?src=https://gist.githubusercontent.com/41223227/6f1ade85ded7a1e8e09fdd62de3cfcb1/raw/6f39e5dde8b2e822eeb098266270fc01d309fc51/g3*list">g3執行結果</a></p>
<p>顯示g3小組成員的網站及倉儲連結:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html, document, ajax

# 取得 brython_div1 DOM 元素
brython_div1 = document["brython_div1"]

# 設定學員資料的 URL
url = "https://mde.tw/list/2b.txt"

# 設定 G3 組員的學號
g3_members = {"41223206", "41223226", "41223227", "41223228", "41223235", "41223215"}

# 定義 AJAX 請求的回呼函式
def on_complete(req):
    if req.status == 200:
        data = req.text.splitlines()  # 以換行符號分割成數列
        if len(data) &gt; 1:  # 確保有資料
            all_stud = data[1:]  # 跳過標題列
            
            brython_div1 &lt;= "G3 組員名單"
            brython_div1 &lt;= html.BR()
            
            # 依序處理每一筆學員資料
            for stud in all_stud:
                fields = stud.split()  # 假設資料是用空格分隔 (請確認你的資料格式)
                if len(fields) &gt;= 2:  # 確保至少有 學號 和 帳號
                    stud_id = fields[0]   # 學號
                    account = fields[1]   # 帳號
                    
                    # 只顯示 G3 組員
                    if stud_id in g3_members:
                        github_link = f"https://github.com/mdecd2025/hw-{stud_id}"
                        
                        # 顯示學號與帳號（兩者都附上超連結）
                        brython_div1 &lt;= html.A(stud_id, href=github_link, target="_blank")  # 學號超連結
                        brython_div1 &lt;= " "
                        brython_div1 &lt;= html.A(account, href=github_link, target="_blank")  # 帳號超連結
                        brython_div1 &lt;= html.BR()
        else:
            brython_div1 &lt;= "沒有學員資料可顯示"
    else:
        brython_div1 &lt;= "無法取得學員資料"

# 發送 AJAX 請求
ajax.get(url, oncomplete=on_complete)
</pre>
<p></p>
<h2>Task2</h2>
<p>近端倉儲推送:</p>
<p><a href="https://youtu.be/8n1LiOqBkko">https://youtu.be/8n1LiOqBkko</a><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8n1LiOqBkko" width="560"></iframe></p>
<p><a href="https://youtu.be/1Y36Zis2M6E">https://youtu.be/1Y36Zis2M6E</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/1Y36Zis2M6E" width="560"></iframe></p>
<p>建立SSH key:</p>
<p><img alt="" height="231" src="/images/螢幕擷取畫面 2025-03-25 083816.png" width="297"/></p>
<p><img alt="" height="249" src="/images/螢幕擷取畫面 2025-03-25 083834.png" width="561"/></p>
<h2>Task3</h2>
<p>四連桿機構繪製:</p>
<p>四連趕機構檔案:<a href="/downloads/四連趕機構零件.zip">/downloads/四連趕機構零件.zip</a></p>
<p><a href="https://youtu.be/MDWxxHAmNK4">https://youtu.be/MDWxxHAmNK4</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/MDWxxHAmNK4" width="560"></iframe></p>
<p><a href="https://youtube.com/shorts/Z5EZUJUsouA">https://youtube.com/watch?v=Z5EZUJUsouA</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Z5EZUJUsouA" width="560"></iframe></p>
<p><a href="https://youtube.com/shorts/xuU2Aj11dfU">https://youtube.com/watch?v=xuU2Aj11dfU</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/xuU2Aj11dfU" width="560"></iframe></p>
<p><a href="https://youtube.com/shorts/PHtQKzFjNsc">https://youtube.com/watch?v=PHtQKzFjNsc</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/PHtQKzFjNsc" width="560"></iframe></p>
<h2>Task4</h2>
<h3>w6</h3>
<p>將四連桿機構從stl檔轉成obj檔:<a href="https://youtu.be/0bExN5Q5ptE">https://youtu.be/0bExN5Q5ptE</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/0bExN5Q5ptE" width="560"></iframe></p>
<h3>w4</h3>
<p>使用webot建立四連桿練習影片:<a href="https://youtu.be/XBE5bwX22Ro">https://youtu.be/XBE5bwX22Ro</a></p>
<p>四連桿檔案:<a href="/downloads/box_fourbar4.zip">/downloads/box_fourbar.zip</a></p>
<p><strong>建造平面四連桿的尺寸設計: 固定桿長度為 1m, 主動旋轉桿長度為 0.4m, 第二旋轉桿長度為 0.6m, 第三旋轉桿長度為 0.9m</strong></p>
<p>1.建立robot群組</p>
<p>2.robot下的children建立1個solid群組，2個higejoint群組，並選一個為首要，命名為joint1</p>
<p>3.solid的children中建立shape作為固定桿(X1,Y0.1,Z0.1)</p>
<p>4.<span>joint1下的endpoint選擇solid性質，命名為link1，並往下的children中建立pose及higejoint，pose下在建立shape為主動桿(0.4,0.1,0.1)</span><span>，shape命名為link1，再將主動桿所屬的pose的translation設為(0.2,0,0)(此為link1中心點)，而higejoint為主動桿與第二桿連接，並命名為joint2。</span></p>
<p><span>5.joint1的endpoint下有translation(此為連接處的座標點)，設(-0.5,0,0.1)</span></p>
<p><span>6.在joint1下有boundingObject，選擇pose，往下children選擇USE link1，並調整座標至(0.2,0,0)(與link1的pose座標一致)，在設置physics</span></p>
<p>7.以上順序重複製作，主要為base--&gt;joint1--&gt;link1--&gt;<span>joint2--&gt;link2--&gt;</span><span>joint3--&gt;link3--&gt;joint4</span></p>
<p><span>8.joint4在robot群組中的children，與joint1同排列，並將endpoint設為solidreference，並選為use link3</span></p>
<p><span>9.每一階的joint中各有jointparameters、device、emdpoint，其中link1上的device要加入Rotationalmotor，並命名為motor</span></p>
<p><span>10.而每一階的jointparameters，axis設為(0,0,1)(意為繞z軸旋轉)，但anchor要設為桿的長度，這樣才是joint到joint的距離，分別為(-0.5,0,0)、(0.4,0,0)、(0.6,0,0)，此座標是接續的，原點根據base的起點，另外設置的joint4則為(0.5,0,0)</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/XBE5bwX22Ro" width="560"></iframe></p>
<h2>Task5</h2>
<h3>w7</h3>
<p><span>solvespace basket_ball_shooter繪製影片:<a href="https://youtu.be/Y-5L4rkpk4w">https://youtu.be/Y-5L4rkpk4w</a></span></p>
<p><span>basket_ball_shooter檔案:<a href="/downloads/basketball繪製.zip">/downloads/basketball繪製.zip</a></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Y-5L4rkpk4w" width="560"></iframe></span></p><h3>w11</h3>
<p>solvespace籃框繪製影片:<a href="https://youtu.be/4LJ1-oZEsqI">https://youtu.be/4LJ1-oZEsqI</a></p>
<p>檔案:<a href="/downloads/籃框.zip">/downloads/籃框.zip</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/4LJ1-oZEsqI" width="560"></iframe></p>
<h2>Task6</h2>
<h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:</p>
<p>w2:全學員班級list整理及各組list整理</p>
<p>w3:近端倉儲推送及更改IPV6位址</p>
<p>w4:利用solvespace繪製四連桿機構</p>
<p>w5-w6:利用四連桿機構在webot上面練習並成功讓它運行</p>
<p>各週網頁內容:<a href="https://mdecd2025.github.io/hw-41223227/content/Task1.html">Tasks1</a>、<a href="https://mdecd2025.github.io/hw-41223227/content/list.html">list</a>、<a href="https://mdecd2025.github.io/hw-41223227/content/Task2.html">Tasks2</a>、<a href="https://mdecd2025.github.io/hw-41223227/content/Task3.html">Tasks3</a>、<a href="https://mdecd2025.github.io/hw-41223227/content/w4.html">w4</a>、<a href="https://mdecd2025.github.io/hw-41223227/content/HW1.html">HW1</a></p>
<p>期中心得:經過了半學期的時間，我認為協同這堂課對我來說是具有挑戰性的，像是一開始的近端推送及最近開始學的webot，而webot真的是一個相當困難的程式，跟上學期的coppeliaSim相比起來，webot真的是需要花更多時間去研究才行，我也是經過了一段時間的研究才成功利用webot將四連桿機構進行連接並使它運轉，因此雖然webot確實是一個很困難的程式，但經過長時間的揣摩，也是能將此次的四連桿作業給完成。</p>
<p>期中自評影片:<a href="https://youtu.be/5ucIFrM9xAY">https://youtu.be/5ucIFrM9xAY</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/5ucIFrM9xAY" width="560"></iframe></p>
<p></p>
<p style="padding-left: 30px;"></p>
<h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號</p>
<p>Exam1影片:<a href="https://youtu.be/my6NOWFFjGM">https://youtu.be/my6NOWFFjGM</a></p>
<p>Exam1檔案:<a href="/downloads/EXAM1.zip">/downloads/EXAM1.zip</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/my6NOWFFjGM" width="560"></iframe></p><h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</p>
<p>solvespace繪製影片:</p>
<p><a href="https://youtu.be/9Q9-pbHfN1A">https://youtu.be/9Q9-pbHfN1A</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/9Q9-pbHfN1A" width="560"></iframe></p>
<p>Webot連接影片:</p>
<p><a href="https://youtu.be/dTEmTpOsgyk">https://youtu.be/dTEmTpOsgyk</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/dTEmTpOsgyk" width="560"></iframe></p><h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號</p>
<h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>